"""
Django settings for library_project project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # Эгер os.path.join колдонсоңуз, бирок Pathlib менен кереги жок

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)!w9v4wz%t3q7@!l1e4#$f$$zgk&@_dcz)vvzrdda9qalc$mk7' # Чыныгы долбоордо муну өзгөртүңүз

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [] # Production'до бул жерге домениңизди жазыңыз


# Application definition

INSTALLED_APPS = [
    # 'jazzmin', # Эгер Jazzmin админ темасын колдонсоңуз, бул жерге жана django.contrib.admin'ден жогору
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Үчүнчү тарап тиркемелери
    'rest_framework',
    'django_filters',
    'drf_spectacular', # API документациясы үчүн

    # Сиздин тиркемелериңиз
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', # Сессиялар үчүн
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', # CSRF коргоосу үчүн (SessionAuthentication менен маанилүү)
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Колдонуучу аутентификациясы үчүн
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'library_project.urls' # Негизги URL конфигурация файлы

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates', # Долбоордун негизги templates папкасы (мис., 404.html, 500.html үчүн)
        ],
        'APP_DIRS': True, # Ар бир тиркеменин 'templates' папкасынан шаблондорду издөө
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Шаблондо 'request' объектисин жеткиликтүү кылат
                'django.contrib.auth.context_processors.auth', # Шаблондо 'user' жана 'perms' объектилерин жеткиликтүү кылат
                'django.contrib.messages.context_processors.messages', # Кабарларды көрсөтүү үчүн
            ],
        },
    },
]

WSGI_APPLICATION = 'library_project.wsgi.application' # WSGI сервери үчүн кирүү чекити


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3', # Маалымат базасы файлы
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ky-KG' # Же 'en-us', 'ru-RU' ж.б.
TIME_ZONE = 'Asia/Bishkek' # Же сиздин убакыт алкагыңыз
USE_I18N = True # Эл аралыкташтырууну иштетүү
USE_TZ = True # Убакыт алкактарын колдонууну иштетүү


# Static files (CSS, JavaScript, Images) - Долбоордун жалпы статикалык файлдары
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/' # Статикалык файлдарга URL префикси

# Development учурунда Django static файлдарды издей турган кошумча папкалар
STATICFILES_DIRS = [
    BASE_DIR / "static", # Долбоордун негизги 'static' папкасы (мис., library_project/static/)
]

# Production үчүн: 'manage.py collectstatic' буйругу бардык статикалык файлдарды
# ушул папкага чогултат. Веб-сервер бул папкадан тейлеши керек.
STATIC_ROOT = BASE_DIR / 'staticfiles_prod'


# Media files (Колдонуучу жүктөгөн файлдар: сүрөттөр, документтер ж.б.)
# https://docs.djangoproject.com/en/5.2/topics/files/

MEDIA_URL = '/media/' # Медиа файлдарга URL префикси
MEDIA_ROOT = BASE_DIR / 'media' # Медиа файлдар сактала турган папка (мис., library_project/media/)
                                # Бул папканы кол менен түзүп коюңуз.

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django REST Framework орнотуулары
# https://www.django-rest-framework.org/api-guide/settings/
 # library_project/settings.py
# ...
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny', # Сыноо үчүн
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}
